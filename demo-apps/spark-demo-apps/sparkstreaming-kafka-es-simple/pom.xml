<?xml version='1.0' encoding='UTF-8'?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.cisco.mantl</groupId>
        <artifactId>demo-apps</artifactId>
        <version>1.0</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <artifactId>sparkstreaming-kafka-es-simple</artifactId>
    <packaging>jar</packaging>

    <description>${project.artifactId}</description>
    <name>${project.artifactId}</name>

    <organization>
        <name>com.cisco.mantl</name>
    </organization>
    <developers>
        <developer>
            <name>Dmytro Bortnichuk</name>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <scala.version>2.10.5</scala.version>
        <scala.test.version>2.0</scala.test.version>
        <scala.tools.version>2.15.2</scala.tools.version>
        <scala.test.plugin.version>1.0</scala.test.plugin.version>
        <scala.compat.version>2.10</scala.compat.version>
        <spark.version>1.5.0</spark.version>
        <spark.kafka.version>1.3.0</spark.kafka.version>
        <spark.kafka.test.version>0.2</spark.kafka.test.version>
        <elasticsearch.version>2.1.1</elasticsearch.version>
        <elasticsearch.test.version>1.2.1</elasticsearch.test.version>
        <hadoop.version>2.7.1</hadoop.version>
        <scopt.version>3.3.0</scopt.version>
    </properties>
    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <plugins>
            <plugin>
                <groupId>org.scala-tools</groupId>
                <artifactId>maven-scala-plugin</artifactId>
                <version>${scala.tools.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <!--<goal>testCompile</goal>-->
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <finalName>${artifactId}-${version}</finalName>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>${scala.test.plugin.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <junitxml>.</junitxml>
                    <filereports>WDF TestSuite.txt</filereports>
                </configuration>
                <executions>
                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.compat.version}</artifactId>
            <version>${spark.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming-kafka_${scala.compat.version}</artifactId>
            <version>${spark.kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch-spark_${scala.compat.version}</artifactId>
            <version>${elasticsearch.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
            <version>${hadoop.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.scopt</groupId>
            <artifactId>scopt_${scala.compat.version}</artifactId>
            <version>${scopt.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.compat.version}</artifactId>
            <version>${scala.test.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tlrx</groupId>
            <artifactId>elasticsearch-test</artifactId>
            <version>${elasticsearch.test.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.batey.kafka</groupId>
            <artifactId>kafka-unit</artifactId>
            <version>${spark.kafka.test.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>AkkaRepository</id>
            <name>Akka Repository</name>
            <url>http://repo.akka.io/releases/</url>
            <layout>default</layout>
        </repository>
        <repository>
            <id>Cloudera</id>
            <name>Cloudera</name>
            <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
            <layout>default</layout>
        </repository>
    </repositories>
</project>
